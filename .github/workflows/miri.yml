name: Check

on: push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  clippy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install clippy with stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: clippy, rustfmt, miri

      - uses: Swatinem/rust-cache@v1

      - name: Clippy Check
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets --all-features -- -D warnings
          name: clippy

  rustfmt:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install clippy with stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: clippy, rustfmt, miri

      - uses: Swatinem/rust-cache@v1

      - name: Rustfmt Check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
      
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install clippy with stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: clippy, rustfmt, miri

      - uses: Swatinem/rust-cache@v1

      - name: Run Tests With Miri
        uses: actions-rs/cargo@v1
        with:
          command: miri
          args: test

  leak-sanitizer:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install clippy with stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - uses: Swatinem/rust-cache@v1

      - name: Leak Sanitizer
        uses: actions-rs/cargo@v1
        with:
          command: test
        env:
          CFLAGS: "-fsanitize=leak"
          CXXFLAGS: "-fsanitize=leak"
          RUSTFLAGS: "-Zsanitizer=leak"
          RUSTDOCFLAGS: "-Zsanitizer=leak"

  thread-sanitizer:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install clippy with stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rust-src

      - uses: Swatinem/rust-cache@v1

      - name: Thread Sanitizer
        run: |
          export TSAN_OPTIONS="suppressions=$GITHUB_WORKSPACE/san-blacklist.txt"
          cargo test -Z build-std --target x86_64-unknown-linux-gnu
        env:
          CFLAGS: "-fsanitize=thread"
          CXXFLAGS: "-fsanitize=thread"
          RUSTFLAGS: "-Zsanitizer=thread"
          RUSTDOCFLAGS: "-Zsanitizer=thread"

  address-sanitizer:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install clippy with stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - uses: Swatinem/rust-cache@v1
    
      - name: Address Sanitizer
        uses: actions-rs/cargo@v1
        with:
          command: test
        env:
          CFLAGS: "-fsanitize=address"
          CXXFLAGS: "-fsanitize=address"
          RUSTFLAGS: "-Zsanitizer=address"
          RUSTDOCFLAGS: "-Zsanitizer=address"

  memory-sanitizer:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install clippy with stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rust-src

      - uses: Swatinem/rust-cache@v1

      - name: Memory Sanitizer
        uses: actions-rs/cargo@v1
        with:
          command: test
        env:
          CFLAGS: "-fsanitize=memory"
          CXXFLAGS: "-fsanitize=memory"
          RUSTFLAGS: "-Zsanitizer=memory"
          RUSTDOCFLAGS: "-Zsanitizer=memory"
